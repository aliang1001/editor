{"version":3,"sources":["ContentEditable/InlineRange.ts","ContentEditable/DOMSelection.ts","ContentEditable/EditObserver.ts","ContentEditable/ContentEditable.ts","ContentEditable/SelectionHost.ts","ContentEditable/utils.ts","ContentEditable/index.ts","Style.ts","TextQueryServer.ts","Resolved.tsx","Coordinator.ts","Source.ts","Geometry.ts","Mutation.ts","Agents.ts","CSS.ts","Components/Caret.tsx","Components/Positioned.tsx","Components/Scrollable.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["pathFromChild","root","child","path","node","parent","parentNode","contains","index","Array","from","childNodes","indexOf","console","assert","push","Error","reverse","childFromPath","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","value","maybeNode","err","return","computeCodePointOffset","offset","partial","wholeText","slice","codePointOffset","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","InlineRange","host","start","end","Object","classCallCheck","this","x","y","lhs","rhs","maxLen","Math","max","length","_i","_Array$from","keys","i","pathLessThan","_ref","_ref2","staticRange","selection","document","getSelection","anchorNode","startContainer","anchorOffset","startOffset","focusNode","endContainer","focusOffset","endOffset","removeAllRanges","range","Range","setStart","setEnd","addRange","setDOMRange","collapsed","dict","node1","path1","offset1","node2","path2","offset2","fromDict","fromNodes","sel","mock","toStaticRange","fromStaticRange","EditObserver","_this","observer","pendingRecords","savedRange","observing","MutationObserver","records","concat","el","observe","subtree","childList","characterData","characterDataOldValue","fromSelection","disconnect","takeRecords","detach","record","type","target","nodeValue","oldValue","addedNodes","_addedNodes","removeChild","removedNodes","_i2","_removedNodes","insertBefore","nextSibling","selectRange","isComposing","event","String","inputType","toLowerCase","search","Status","ContentEditable","browserSupported","ua","navigator","userAgent","detectBrowser","hostRef","React","createRef","pendingCallbacks","onInsertionOrDeletion","action","props","onInsertText","data","onDeleteContent","cancelable","attach","onBeforeInput","preventDefault","getTargetRanges","onInsertParagraph","onInput","restore","callback","onCompositionStart","onCompositionEnd","addEventListener","createElement","_this$props","tag","children","objectSpread","contentEditable","suppressContentEditableWarning","ref","current","Component","SelectionHost","composing","rangeStatus","_assertThisInitialize","assertThisInitialized","isRelevant","onPartialOverlap","onSelectionChange","Outside","containsAnchor","containsFocus","Overlapping","Inside","handleSelectionChange","_this2","deselectHost","_","window","Style","params","possibleConstructorReturn","getPrototypeOf","call","values","merge","color","fontSize","lineHeight","fontFamily","fontFallbackList","join","whiteSpace","map","Record","Text","text","style","width","innerHTML","div","cssString","setAttribute","first","second","createDiv","body","appendChild","secondSpan","offsetLeft","offsetTop","origin","size","height","clientHeight","server","TextQueryServer","createClass","key","TextBlock","_TextBlockFactory","inherits","react_default","a","css","TQSServer","createParagraph","caretRect","get","Block","block","render","FakeCoordinator","counter","observers","setInterval","changed","resourceChanged","id","everyOne","everyTwo","everyFour","floor","toConsumableArray","Paragraph","_ParagraphFactory","kind","styleFromKind","Resolved","ExternalText","resource","coordinator","retrieve","inRect","point","rect","dx","dy","f","mutation","group","applyToArray","array","SourceTree","list","Mutation","sourceTreeMutationReceived","ResolvedTree","source","compile","sourceMutation","resolvedTreeMutationReceived","ids","_this3","mutated","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","entries","_ref3","slicedToArray","Source","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","defaultConfig","padding","top","bottom","left","right","spacingBetweenBlock","LayoutTree","resolved","containerWidth","_this4","layoutConfig","arguments","heights","rects","contentHeight","heightGivenWidth","contentWidth","fixRects","_this$layoutConfig$pa","_this$layoutConfig","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","resolvedMutation","_this5","_iteratorNormalCompletion6","_didIteratorError6","_iteratorError6","_step6","_iterator6","layoutUpdated","Geometry","_this$resolved$list$i","relative","RenderTree","layout","containerHeight","_this7","allocator","visibleBlocks","setVisibleBlocks","KeyAllocator","visibleBlockIndices","requestKey","_this6","firstVisible","lastVisible","indices","_this8","indicies","_iteratorNormalCompletion7","_didIteratorError7","_iteratorError7","_step7","_iterator7","_ref5","recycleKey","visible","find","fixVisibleBlocks","min","used","total","quoteList","kindList","sample_","n","seqN","random","sample","cssAbsolutePositioned","_rect$origin","_rect$size","position","Caret","display","className","Positioned","data-id","Scrollable","containerSize","outerEl","useRef","onScroll","onClick","handleScroll","useCallback","e","scrollTop","handleClick","client","clientX","clientY","pageX","scrollLeft","pageY","outerCSS","overflowY","backgroundColor","innerCSS","outerClass","innerClass","App","_Agents$useDocument","_React$useMemo","useMemo","Coordinator","_React$useMemo2","_React$useState","useState","_React$useState2","setOffset","scrollTo","commit","apply","Agents","caret","setCaret","elRef","blockIndex","blockIndexForPoint","caretPositionFromPoint","offsetNode","caretRangeFromPoint","getCaretPosition","rangeThunk","fromPaths","inlineRangeFrom","handleInsertText","input","block_","handleDeleteContent","noOp","Components_Scrollable","Components_Positioned","JSON","stringify","src_Components_Caret","SelectionHost_SelectionHost","src_ContentEditable","Boolean","location","hostname","match","ReactDOM","src_App","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a442d6e6.chunk.js","sourcesContent":["import { toStaticRange, setDOMRange } from './DOMSelection'\n\nexport function pathFromChild(root: Element, child: Node): Array<number> {\n  let path = [] as Array<number>\n  let node = child\n\n  for (let parent = node.parentNode; parent && root.contains(parent); parent = node.parentNode) {\n    const index = Array.from(parent.childNodes).indexOf(node as ChildNode)\n    console.assert(index !== -1, 'Impossible!')\n\n    path.push(index)\n    node = parent\n  }\n\n  if (node !== root) {\n    throw new Error('Cannot find child inside the root.')\n  }\n  return path.reverse()\n}\n\nexport function childFromPath(root: Element, path: Array<number>): Node {\n  let node = root as Node\n  for (const index of path) {\n    const maybeNode = node.childNodes[index]\n    if (!maybeNode) {\n      throw new Error('Invalid path.')\n    }\n    node = maybeNode\n  }\n  return node\n}\n\nfunction pathLessThan(x: Point, y: Point): boolean {\n  if (x.node === y.node) {\n    return x.offset < y.offset\n  }\n\n  const lhs = x.path\n  const rhs = y.path\n  const maxLen = Math.max(lhs.length, rhs.length)\n  for (const i of Array.from(Array(maxLen).keys())) {\n    if (lhs[i] < rhs[i]) {\n      return true\n    }\n    if (lhs[i] > rhs[i]) {\n      return false\n    }\n  }\n  return false\n}\n\nexport type Host = Element\n\nexport type Point = {\n  path: Array<number>\n  node: Node\n  offset: number\n  codePointOffset: number\n}\n\nfunction computeCodePointOffset(node: Node, offset: number): number {\n  if (offset === 0) {\n    return 0\n  }\n\n  const text = (node as Text).wholeText\n  const partial = text.slice(0, offset)\n  let codePointOffset = 0\n  for (const c of partial) {\n    codePointOffset++\n  }\n  return codePointOffset\n}\n\nexport default class InlineRange {\n  public readonly host: Host\n  public readonly start: Point\n  public readonly end: Point\n\n  constructor(host: Host, start: Point, end: Point) {\n    if (start.node !== childFromPath(host, start.path)) {\n      throw new Error('Invalid start point.')\n    }\n    if (end.node !== childFromPath(host, end.path)) {\n      throw new Error('Invalid end point.')\n    }\n\n    this.host = host\n    if (pathLessThan(start, end)) {\n      ;[this.start, this.end] = [start, end]\n    } else {\n      ;[this.start, this.end] = [end, start]\n    }\n  }\n\n  selectRange() {\n    setDOMRange({\n      startContainer: this.start.node,\n      startOffset: this.start.offset,\n      endContainer: this.end.node,\n      endOffset: this.end.offset,\n      collapsed: false // unimportant\n    })\n  }\n\n  static fromDict(dict: {\n    host: Host\n    node1: Node\n    path1: Array<number>\n    offset1: number\n    node2: Node\n    path2: Array<number>\n    offset2: number\n  }) {\n    const { host, node1, path1, offset1, node2, path2, offset2 } = dict\n    const start = {\n      path: path1,\n      node: node1,\n      offset: offset1,\n      codePointOffset: computeCodePointOffset(node1, offset1)\n    }\n    const end = {\n      path: path2,\n      node: node2,\n      offset: offset2,\n      codePointOffset: computeCodePointOffset(node2, offset2)\n    }\n    return new InlineRange(host, start, end)\n  }\n\n  static fromPaths(host: Host, path1: Array<number>, offset1: number, path2: Array<number>, offset2: number) {\n    const node1 = childFromPath(host, path1)\n    const node2 = childFromPath(host, path2)\n    return InlineRange.fromDict({ host, node1, path1, offset1, node2, path2, offset2 })\n  }\n\n  static fromNodes(host: Host, node1: Node, offset1: number, node2: Node, offset2: number) {\n    const path1 = pathFromChild(host, node1)\n    const path2 = pathFromChild(host, node2)\n    return InlineRange.fromDict({ host, node1, path1, offset1, node2, path2, offset2 })\n  }\n\n  static fromStaticRange(host: Host, range: StaticRange): InlineRange {\n    return InlineRange.fromNodes(host, range.startContainer, range.startOffset, range.endContainer, range.endOffset)\n  }\n\n  static fromSelection(host: Host, sel: Selection): InlineRange | null {\n    const mock = toStaticRange(host, sel)\n    if (!mock) {\n      return null\n    }\n    return InlineRange.fromStaticRange(host, mock)\n  }\n}\n","export function toStaticRange(host: Element, sel: Selection): StaticRange | null {\n  const { anchorNode, anchorOffset, focusNode, focusOffset } = sel\n\n  if (!anchorNode || !focusNode) {\n    return null\n  }\n\n  if (!host.contains(anchorNode) || !host.contains(focusNode)) {\n    return null\n  }\n\n  return {\n    startContainer: anchorNode,\n    startOffset: anchorOffset,\n    endContainer: focusNode,\n    endOffset: focusOffset,\n    collapsed: anchorNode === focusNode && anchorOffset === focusOffset\n  }\n}\n\nexport function setDOMRange(staticRange: StaticRange) {\n  const selection = document.getSelection()\n  if (!selection) {\n    return\n  }\n\n  if (\n    selection.anchorNode === staticRange.startContainer &&\n    selection.anchorOffset === staticRange.startOffset &&\n    selection.focusNode === staticRange.endContainer &&\n    selection.focusOffset === staticRange.endOffset\n  ) {\n    return\n  }\n  if (\n    selection.focusNode === staticRange.startContainer &&\n    selection.focusOffset === staticRange.startOffset &&\n    selection.anchorNode === staticRange.endContainer &&\n    selection.anchorOffset === staticRange.endOffset\n  ) {\n    return\n  }\n\n  selection.removeAllRanges()\n  const range = new Range()\n  range.setStart(staticRange.startContainer, staticRange.startOffset)\n  range.setEnd(staticRange.endContainer, staticRange.endOffset)\n\n  selection.addRange(range)\n}\n","import InlineRange from './InlineRange'\n\nexport default class EditObserver {\n  private readonly observer: MutationObserver\n  private pendingRecords: Array<MutationRecord> = []\n  private savedRange: InlineRange | null = null\n  observing: boolean = false\n\n  constructor() {\n    this.observer = new MutationObserver(records => {\n      this.pendingRecords = this.pendingRecords.concat(records)\n    })\n  }\n\n  attach(el: Element) {\n    this.observer.observe(el, {\n      subtree: true,\n      childList: true,\n      characterData: true,\n      characterDataOldValue: true\n    })\n\n    const selection = document.getSelection()\n    if (!selection) {\n      throw new Error('Method getSelection() returns null.')\n    }\n    this.savedRange = InlineRange.fromSelection(el, selection)\n    this.observing = true\n  }\n\n  detach() {\n    this.observer.disconnect()\n    this.pendingRecords = []\n    this.observing = false\n  }\n\n  restore() {\n    const records = this.pendingRecords.concat(this.observer.takeRecords())\n    records.reverse()\n\n    this.detach()\n\n    for (const record of records) {\n      if (record.type === 'characterData') {\n        record.target.nodeValue = record.oldValue\n      }\n\n      if (record.type === 'childList') {\n        const addedNodes = Array.from(record.addedNodes)\n        for (const node of addedNodes) {\n          record.target.removeChild(node)\n        }\n        const removedNodes = Array.from(record.removedNodes)\n        for (const node of removedNodes) {\n          record.target.insertBefore(node, record.nextSibling)\n        }\n      }\n    }\n\n    const range = this.savedRange as InlineRange\n    this.savedRange = null\n    range.selectRange()\n    return range\n  }\n}\n","import React, { Component } from 'react'\n\nimport { detectBrowser } from './utils'\nimport InlineRange from './InlineRange'\nimport EditObserver from './EditObserver'\n\ninterface InputEventData {\n  readonly inputType: string\n  readonly data?: string\n  readonly isComposing?: boolean\n  getTargetRanges: () => Array<StaticRange>\n}\n\ntype InputEvent = Event & InputEventData\n\ntype Props = {\n  tag: string\n  props: { [key: string]: string }\n\n  onInsertText: (range: InlineRange, data: string) => void\n  onDeleteContent: (range: InlineRange) => void\n  onInsertParagraph?: (range: InlineRange) => void\n}\n\nfunction isComposing(event: InputEvent): boolean {\n  if (event.isComposing !== undefined) {\n    return event.isComposing\n  }\n\n  const inputType = new String(event.inputType).toLowerCase()\n  return inputType.search('composition') !== -1\n}\n\nexport default class ContentEditable extends Component<Props> {\n  // There is no way to feature detect support of Input Events Level 1+.\n  // 1. Firefox has a 'inputType' in a constructed InputEvent.\n  // 2. Chrome does not provide 'onbeforeinput' in editable elements.\n  private readonly browserSupported = detectBrowser() !== 'other'\n  private readonly observer = new EditObserver()\n  private hostRef = React.createRef<HTMLElement>()\n\n  private pendingCallbacks = [] as Array<() => void>\n\n  get host() {\n    const host = this.hostRef.current\n    if (!host) {\n      throw new Error('Element ref is not initialized.')\n    }\n    return host\n  }\n\n  componentDidMount() {\n    const host = this.host\n    host.addEventListener('compositionstart', this.onCompositionStart as EventListener)\n    host.addEventListener('compositionend', this.onCompositionEnd as EventListener)\n    host.addEventListener('beforeinput', this.onBeforeInput as EventListener)\n    host.addEventListener('input', this.onInput as EventListener)\n  }\n\n  onInsertionOrDeletion = (event: InputEvent, range: InlineRange) => {\n    const action =\n      event.inputType === 'insertText'\n        ? () => this.props.onInsertText(range, event.data as string)\n        : () => this.props.onDeleteContent(range)\n\n    if (event.cancelable) {\n      action()\n    } else {\n      this.observer.attach(this.host)\n      this.pendingCallbacks.push(action)\n    }\n  }\n\n  onBeforeInput = (event: InputEvent) => {\n    if (isComposing(event)) {\n      return\n    }\n    event.preventDefault()\n\n    const staticRange = event.getTargetRanges()[0]\n    const range = InlineRange.fromStaticRange(this.host, staticRange)\n\n    switch (event.inputType) {\n      case 'insertText':\n      case 'deleteContent':\n      case 'deleteContentBackward':\n      case 'deleteContentForward':\n        this.onInsertionOrDeletion(event, range)\n        return\n\n      default:\n        break\n    }\n\n    const action = () => {\n      switch (event.inputType) {\n        case 'insertParagraph':\n          if (this.props.onInsertParagraph) {\n            return this.props.onInsertParagraph(range)\n          }\n\n        default:\n          return\n      }\n    }\n    if (event.cancelable) {\n      action()\n    } else {\n      this.observer.attach(this.host)\n      this.pendingCallbacks.push(action)\n    }\n  }\n\n  onInput = (event: InputEvent) => {\n    if (!this.observer.observing) {\n      return\n    }\n\n    if (isComposing(event)) {\n      return\n    }\n\n    this.observer.restore()\n    for (const callback of this.pendingCallbacks) {\n      callback()\n    }\n    this.pendingCallbacks = []\n  }\n\n  onCompositionStart = (event: CompositionEvent) => {\n    this.observer.attach(this.host)\n  }\n\n  onCompositionEnd = (event: CompositionEvent) => {\n    const range = this.observer.restore()\n    this.props.onInsertText(range as InlineRange, event.data as string)\n  }\n\n  render() {\n    if (!this.browserSupported) {\n      return React.createElement('p', null, 'Support for Input Event level 1 or higher is required.')\n    }\n\n    const { tag, children } = this.props\n    return React.createElement(\n      tag || 'p',\n      {\n        contentEditable: true,\n        suppressContentEditableWarning: true,\n        ref: this.hostRef,\n        ...this.props.props\n      },\n      children\n    )\n  }\n}\n","import React, { Component } from 'react'\n\nimport InlineRange from './InlineRange'\n\ntype Props = {\n  range: () => InlineRange | null\n  isRelevant?: (sel: Selection) => boolean\n  onPartialOverlap?: (sel: Selection) => void\n  onSelectionChange: (sel: Selection | null) => void\n}\n\nenum Status {\n  Outside = 1,\n  Overlapping,\n  Inside\n}\n\nfunction equalRange(lhs: InlineRange, rhs: InlineRange) {\n  return (\n    lhs.host === rhs.host &&\n    lhs.start.node === rhs.start.node &&\n    lhs.start.offset === rhs.start.offset &&\n    lhs.end.node === rhs.end.node &&\n    lhs.end.offset === rhs.end.offset\n  )\n}\n\nexport default class SelectionHost extends Component<Props> {\n  private hostRef = React.createRef<HTMLDivElement>()\n  private composing = false\n\n  get host() {\n    const host = this.hostRef.current\n    if (!host) {\n      throw new Error('Element ref is not initialized.')\n    }\n    return host\n  }\n\n  render() {\n    return React.createElement(\n      'div',\n      {\n        ref: this.hostRef\n      },\n      this.props.children\n    )\n  }\n\n  componentDidMount() {\n    const range = this.props.range()\n\n    if (!range) {\n      this.deselectHost()\n    } else {\n      range.selectRange()\n    }\n\n    document.addEventListener('selectionchange', _ => {\n      if (this.composing) {\n        return\n      }\n\n      const sel = window.getSelection()\n      if (!sel) {\n        throw new Error('Cannot get selection.')\n      }\n      this.handleSelectionChange(sel)\n    })\n\n    document.addEventListener('compositionstart', _ => {\n      this.composing = true\n    })\n    document.addEventListener('compositionend', _ => {\n      this.composing = false\n    })\n  }\n\n  componentDidUpdate() {\n    const range = this.props.range()\n\n    if (!range) {\n      this.deselectHost()\n    } else {\n      range.selectRange()\n    }\n  }\n\n  rangeStatus = (sel: Selection) => {\n    const { anchorNode, focusNode } = sel\n\n    const { host, props } = this\n    const { isRelevant, onPartialOverlap, onSelectionChange } = props\n\n    if (!anchorNode || !focusNode) {\n      return Status.Outside\n    }\n\n    const containsAnchor = host.contains(anchorNode)\n    const containsFocus = host.contains(focusNode)\n\n    if (!containsAnchor && !containsFocus) {\n      return Status.Outside\n    }\n\n    if (containsAnchor !== containsFocus) {\n      if (this.props.onPartialOverlap) {\n        return Status.Overlapping\n      } else {\n        return Status.Outside\n      }\n    }\n\n    if (isRelevant && !isRelevant(sel)) {\n      return Status.Outside\n    }\n\n    return Status.Inside\n  }\n\n  handleSelectionChange = (sel: Selection) => {\n    switch (this.rangeStatus(sel)) {\n      case Status.Outside:\n        this.props.onSelectionChange(null)\n        return\n\n      case Status.Overlapping:\n        this.props.onPartialOverlap && this.props.onPartialOverlap(sel)\n        return\n\n      default:\n        this.props.onSelectionChange(sel)\n    }\n  }\n\n  deselectHost() {\n    const sel = window.getSelection()\n    if (!sel) {\n      throw new Error('Cannot get selection.')\n    }\n\n    const status = this.rangeStatus(sel)\n    if (status !== Status.Inside) {\n      return\n    }\n\n    sel.removeAllRanges()\n  }\n}\n","export type Browser = 'safari' | 'chrome' | 'other'\n\nexport function detectBrowser(): Browser {\n  const ua = navigator.userAgent.toLowerCase()\n  if (ua.indexOf('safari') === -1) {\n    return 'other'\n  }\n  if (ua.indexOf('chrome') > -1) {\n    return 'chrome'\n  }\n  return 'safari'\n}\n","import InlineRange from './InlineRange'\nimport ContentEditable from './ContentEditable'\nimport SelectionHost from './SelectionHost'\n\nexport { InlineRange, SelectionHost, ContentEditable }\nexport default ContentEditable\n","import { Record } from 'immutable'\n\nexport type StyleParams = {\n  fontFallbackList?: string[]\n  color?: string\n  fontSize?: number\n  lineHeight?: number\n}\n\nconst StyleFactory = Record({\n  fontFallbackList: ['-apple-system', 'BlinkMacSystemFont'],\n  color: 'black',\n  fontSize: 16,\n  lineHeight: 1.5\n})\n\nexport default class Style extends StyleFactory {\n  constructor(params?: StyleParams) {\n    params ? super(params) : super()\n  }\n\n  with(values: StyleParams) {\n    return this.merge(values) as this\n  }\n\n  get css(): React.CSSProperties {\n    const { color, fontSize, lineHeight } = this\n    return {\n      fontFamily: this.fontFallbackList.join(', '),\n      color,\n      fontSize,\n      lineHeight,\n      whiteSpace: 'pre-wrap'\n    }\n  }\n\n  get cssString(): string {\n    const fontFamily = this.fontFallbackList.map(x => `\"${x}\"`).join(', ')\n    const { color, fontSize, lineHeight } = this\n    return `\n      font-family: ${fontFamily};\n      color: ${color};\n      font-size: ${fontSize}px;\n      line-height: ${lineHeight};\n      white-space: pre-wrap;`\n  }\n}\n","import React from 'react'\n\nimport Style from './Style'\nimport { Rect } from './Geometry'\n\nexport interface QueryableText {\n  readonly text: string\n  readonly style: Style\n  readonly width: number\n  readonly height: number\n  caretRect(offset: number): Rect\n}\n\nclass Text implements QueryableText {\n  readonly text: string\n  readonly style: Style\n  readonly width: number\n\n  constructor(text: string, style: Style, width: number) {\n    this.text = text\n    this.style = style\n    this.width = width\n  }\n\n  private createDiv(innerHTML: string): HTMLElement {\n    const div = document.createElement('div')\n    div.innerHTML = innerHTML\n\n    const style = `\n        ${this.style.cssString}\n        width: ${this.width}px;\n        position: absolute;\n        top: -99999px;\n        visibility: none;`\n    div.setAttribute('style', style)\n    return div\n  }\n\n  get height() {\n    const div = this.createDiv(this.text)\n    document.body.appendChild(div)\n    const height = div.clientHeight\n    document.body.removeChild(div)\n    return height\n  }\n\n  caretRect(offset: number) {\n    const first = this.text.slice(0, offset)\n    const second = this.text.slice(offset)\n    const div = this.createDiv(`<span>${first}</span><span>${second}</span>`)\n    document.body.appendChild(div)\n    const secondSpan = div.children[1] as HTMLElement\n    const x = secondSpan.offsetLeft\n    const y = secondSpan.offsetTop\n    document.body.removeChild(div)\n\n    const width = 2\n    const height = this.style.fontSize * 1.2\n    return {\n      origin: { x, y },\n      size: { width, height }\n    }\n  }\n}\n\nexport class TextQueryServer {\n  createParagraph(text: string, style: Style, width: number): QueryableText {\n    return new Text(text, style, width)\n  }\n}\n\nconst server = new TextQueryServer()\n\nexport default server\n","import { Record } from 'immutable'\nimport React from 'react'\n\nimport { Rect } from './Geometry'\nimport Style from './Style'\n\nimport TQSServer from './TextQueryServer'\n\nexport interface Block {\n  readonly baseFontSize: number\n\n  render(): React.ReactElement\n  heightGivenWidth(width: number): number\n  caretRect(offset: number, width: number): Rect\n}\n\nexport type TextBlockParams = {\n  style?: Style\n  text?: string\n}\n\nconst TextBlockFactory = Record({ style: new Style(), text: '' })\n\nexport class TextBlock extends TextBlockFactory implements Block {\n  constructor(params?: TextBlockParams) {\n    params ? super(params) : super()\n  }\n\n  get baseFontSize() {\n    return this.style.fontSize\n  }\n\n  render() {\n    return <div style={this.style.css}>{this.text}</div>\n  }\n\n  heightGivenWidth(width: number) {\n    const text = TQSServer.createParagraph(this.text, this.style, width)\n    return text.height\n  }\n\n  caretRect(offset: number, width: number) {\n    const text = TQSServer.createParagraph(this.text, this.style, width)\n    return text.caretRect(offset)\n  }\n}\n\nexport const Block: React.FC<{ block: Block }> = ({ block }) => block.render()\n","type Resource = string\n\nexport interface ResourceObserver {\n  resourceChanged(ids: string[]): void\n}\n\nexport interface Coordinator {\n  retrieve(id: string): Resource\n  observe(observer: ResourceObserver): void\n  unobserve(observer: ResourceObserver): void\n}\n\nexport class FakeCoordinator implements Coordinator {\n  counter: number = 0\n  observers: ResourceObserver[] = []\n\n  get everyOne(): number {\n    return this.counter\n  }\n\n  get everyTwo(): number {\n    return Math.floor(this.counter / 2)\n  }\n\n  get everyFour(): number {\n    return Math.floor(this.counter / 4)\n  }\n\n  retrieve(id: string) {\n    if (id === 'everyOne') {\n      return `counter = ${this.everyOne}; update every second`\n    }\n\n    if (id === 'everyTwo') {\n      return `counter = ${this.everyTwo}; update every two seconds`\n    }\n\n    if (id === 'everyFour') {\n      return `counter = ${this.everyFour}; update every four seconds`\n    }\n\n    return 'resource not found'\n  }\n\n  constructor() {\n    setInterval(() => {\n      this.counter += 1\n\n      let changed: string[] = ['everyOne']\n      if (this.counter % 2 === 0) {\n        changed.push('everyTwo')\n      }\n      if (this.counter % 4 === 0) {\n        changed.push('everyFour')\n      }\n      for (const observer of this.observers) {\n        observer.resourceChanged(changed)\n      }\n    }, 1000)\n  }\n\n  observe(observer: ResourceObserver) {\n    this.observers.push(observer)\n  }\n\n  unobserve(observer: ResourceObserver) {\n    const index = this.observers.indexOf(observer)\n    if (index !== -1) {\n      this.observers = [...this.observers.slice(0, index), ...this.observers.slice(index + 1)]\n    }\n  }\n}\n","import { Record } from 'immutable'\n\nimport { Coordinator } from './Coordinator'\n\nimport * as Resolved from './Resolved'\nimport Style from './Style'\n\nexport interface Block {\n  compile(coordinator: Coordinator): Resolved.Block\n}\n\nexport type ParagraphKind = 'heading1' | 'heading2' | 'heading3' | 'singleQuote' | 'paragraph'\n\nfunction styleFromKind(kind: ParagraphKind): Style {\n  switch (kind) {\n    case 'heading1':\n      return new Style({ fontSize: 48 })\n    case 'heading2':\n      return new Style({ fontSize: 32 })\n    case 'heading3':\n      return new Style({ fontSize: 24 })\n    case 'singleQuote':\n      return new Style({ color: 'grey', fontSize: 32 })\n    default:\n      return new Style()\n  }\n}\n\nexport type ParagraphParams = {\n  kind?: ParagraphKind\n  text?: string\n}\n\nconst ParagraphFactory = Record({ kind: 'paragraph' as ParagraphKind, text: '' })\n\nexport class Paragraph extends ParagraphFactory implements Block {\n  constructor(params?: ParagraphParams) {\n    params ? super(params) : super()\n  }\n\n  with(values: ParagraphParams) {\n    return this.merge(values) as this\n  }\n\n  compile(_: Coordinator) {\n    const style = styleFromKind(this.kind)\n    return new Resolved.TextBlock({ style, text: this.text })\n  }\n}\n\nexport class ExternalText implements Block {\n  public readonly resource: string\n  constructor(resource: string) {\n    this.resource = resource\n  }\n\n  compile(coordinator: Coordinator) {\n    const style = new Style()\n    return new Resolved.TextBlock({ style, text: coordinator.retrieve(this.resource) })\n  }\n}\n","export type Point = { x: number; y: number }\nexport type Size = { height: number; width: number }\nexport type Rect = { origin: Point; size: Size }\n\nexport function inRect(point: Point, rect: Rect) {\n  const dx = point.x - rect.origin.x\n  const dy = point.y - rect.origin.y\n  if (dx < 0 || dx > rect.size.width) {\n    return false\n  }\n  if (dy < 0 || dy > rect.size.height) {\n    return false\n  }\n  return true\n}\n","export type Insertion<Ix, T> = {\n  kind: 'insertion'\n  index: Ix\n  value: T\n}\n\nexport type Deletion<Ix, T> = {\n  kind: 'deletion'\n  index: Ix\n}\n\nexport type Update<Ix, T> = {\n  kind: 'update'\n  index: Ix\n  value: T\n}\n\nexport type Sequential<Ix, T> = {\n  kind: 'sequential'\n  group: Array<Mutation<Ix, T>>\n}\n\nexport type Mutation<Ix, T> = Insertion<Ix, T> | Deletion<Ix, T> | Update<Ix, T> | Sequential<Ix, T>\n\nexport function map<Ix, S, T>(f: (x: S) => T, mutation: Mutation<Ix, S>): Mutation<Ix, T> {\n  switch (mutation.kind) {\n    case 'insertion': {\n      const { index, value } = mutation\n      return {\n        kind: 'insertion',\n        index,\n        value: f(value)\n      }\n    }\n\n    case 'deletion': {\n      const { index } = mutation\n      return {\n        kind: 'deletion',\n        index\n      }\n    }\n\n    case 'update': {\n      const { index, value } = mutation\n      return {\n        kind: 'update',\n        index,\n        value: f(value)\n      }\n    }\n\n    case 'sequential': {\n      const { group } = mutation\n      return {\n        kind: 'sequential',\n        group: group.map(x => map(f, x))\n      }\n    }\n  }\n}\n\nexport function applyToArray<T>(array: T[], mutation: Mutation<number, T>): T[] {\n  switch (mutation.kind) {\n    case 'insertion': {\n      const { index, value } = mutation\n      return [...array.slice(0, index), value, ...array.slice(index)]\n    }\n\n    case 'deletion': {\n      const { index } = mutation\n      return [...array.slice(0, index), ...array.slice(index + 1)]\n    }\n\n    case 'update': {\n      const { index, value } = mutation\n      array = array.slice(0)\n      array[index] = value\n      return array\n    }\n\n    case 'sequential': {\n      const { group } = mutation\n      for (const mutation of group) {\n        array = applyToArray(array, mutation)\n      }\n      return array\n    }\n  }\n}\n","import React from 'react'\n\nimport * as Coordinator from './Coordinator'\n\nimport * as Source from './Source'\nimport * as Resolved from './Resolved'\n\nimport { Point, Size, Rect } from './Geometry'\nimport * as Geometry from './Geometry'\n\nimport * as Mutation from './Mutation'\n\nexport type SourceMutation = Mutation.Mutation<number, Source.Block>\n\nexport interface SourceTreeObserver {\n  sourceTreeMutationReceived(mutation: SourceMutation): void\n}\n\nexport class SourceTree {\n  public list: Source.Block[]\n  private observers: SourceTreeObserver[] = []\n\n  constructor(list: Source.Block[]) {\n    this.list = list\n  }\n\n  apply(mutation: SourceMutation) {\n    this.list = Mutation.applyToArray(this.list, mutation)\n    for (const observer of this.observers) {\n      observer.sourceTreeMutationReceived(mutation)\n    }\n  }\n\n  observe(observer: SourceTreeObserver) {\n    this.observers.push(observer)\n  }\n\n  unobserve(observer: SourceTreeObserver) {\n    const index = this.observers.indexOf(observer)\n    if (index !== -1) {\n      this.observers = [...this.observers.slice(0, index), ...this.observers.slice(index + 1)]\n    }\n  }\n}\n\nexport type ResolvedMutation = Mutation.Mutation<number, Resolved.Block>\n\nexport interface ResolvedTreeObserver {\n  resolvedTreeMutationReceived(mutation: ResolvedMutation): void\n}\n\nexport class ResolvedTree implements SourceTreeObserver, Coordinator.ResourceObserver {\n  public source: SourceTree\n  public coordinator: Coordinator.Coordinator\n  public list: Resolved.Block[]\n  private observers: ResolvedTreeObserver[] = []\n\n  constructor(source: SourceTree, coordinator: Coordinator.Coordinator) {\n    this.source = source\n    this.source.observe(this)\n    this.coordinator = coordinator\n    this.coordinator.observe(this)\n    this.list = source.list.map(x => x.compile(this.coordinator))\n  }\n\n  sourceTreeMutationReceived(sourceMutation: SourceMutation) {\n    const mutation: ResolvedMutation = Mutation.map(x => x.compile(this.coordinator), sourceMutation)\n    this.list = Mutation.applyToArray(this.list, mutation)\n    for (const observer of this.observers) {\n      observer.resolvedTreeMutationReceived(mutation)\n    }\n  }\n\n  observe(observer: ResolvedTreeObserver) {\n    this.observers.push(observer)\n  }\n\n  unobserve(observer: ResolvedTreeObserver) {\n    const index = this.observers.indexOf(observer)\n    if (index !== -1) {\n      this.observers = [...this.observers.slice(0, index), ...this.observers.slice(index + 1)]\n    }\n  }\n\n  resourceChanged(ids: string[]) {\n    let mutated: number[] = []\n\n    for (const [i, block] of this.source.list.entries()) {\n      if (block instanceof Source.ExternalText) {\n        if (ids.indexOf(block.resource) !== -1) {\n          mutated.push(i)\n        }\n      }\n    }\n\n    const mutations = mutated.map(i => {\n      const block = this.source.list[i]\n      const resolved = block.compile(this.coordinator)\n      const mutation: ResolvedMutation = {\n        kind: 'update',\n        index: i,\n        value: resolved\n      }\n      return mutation\n    })\n    const mutation: ResolvedMutation = {\n      kind: 'sequential',\n      group: mutations\n    }\n    this.list = Mutation.applyToArray(this.list, mutation)\n    for (const observer of this.observers) {\n      observer.resolvedTreeMutationReceived(mutation)\n    }\n  }\n}\n\nexport type LayoutConfig = {\n  padding: { top: number; bottom: number; left: number; right: number }\n  spacingBetweenBlock: number\n}\n\nconst defaultConfig: LayoutConfig = {\n  padding: {\n    top: 20,\n    bottom: 20,\n    left: 20,\n    right: 20\n  },\n  spacingBetweenBlock: 20\n}\n\ninterface LayoutTreeObserver {\n  layoutUpdated(): void\n}\n\nexport class LayoutTree implements ResolvedTreeObserver {\n  public resolved: ResolvedTree\n  public containerWidth: number\n  public layoutConfig: LayoutConfig\n\n  private heights: number[]\n  // 由 fixRects 初始化。\n  public rects: Rect[] = []\n  public contentHeight: number = 0\n\n  get contentWidth(): number {\n    const { left, right } = this.layoutConfig.padding\n    return this.containerWidth - left - right\n  }\n\n  private observers: LayoutTreeObserver[] = []\n\n  constructor(resolved: ResolvedTree, containerWidth: number, layoutConfig: LayoutConfig = defaultConfig) {\n    this.resolved = resolved\n    this.resolved.observe(this)\n    this.containerWidth = containerWidth\n    this.layoutConfig = layoutConfig\n\n    this.heights = resolved.list.map(x => x.heightGivenWidth(this.contentWidth))\n    this.fixRects()\n  }\n\n  observe(observer: LayoutTreeObserver) {\n    this.observers.push(observer)\n  }\n\n  unobserve(observer: LayoutTreeObserver) {\n    const index = this.observers.indexOf(observer)\n    if (index !== -1) {\n      this.observers = [...this.observers.slice(0, index), ...this.observers.slice(index + 1)]\n    }\n  }\n\n  fixRects() {\n    const contentWidth = this.contentWidth\n    const { padding, spacingBetweenBlock } = this.layoutConfig\n\n    let rects: Rect[] = []\n    let y = padding.top\n    for (const height of this.heights) {\n      const rect = {\n        origin: { x: padding.left, y },\n        size: { width: contentWidth, height }\n      }\n      y += height + spacingBetweenBlock\n      rects.push(rect)\n    }\n    this.rects = rects\n    this.contentHeight = y - spacingBetweenBlock + padding.bottom\n  }\n\n  resolvedTreeMutationReceived(resolvedMutation: ResolvedMutation) {\n    const mutation = Mutation.map(x => x.heightGivenWidth(this.contentWidth), resolvedMutation)\n    this.heights = Mutation.applyToArray(this.heights, mutation)\n    this.fixRects()\n    for (const observer of this.observers) {\n      observer.layoutUpdated()\n    }\n  }\n\n  blockIndexForPoint(point: Point) {\n    for (let i = 0; i < this.rects.length; i += 1) {\n      const rect = this.rects[i]\n      if (Geometry.inRect(point, rect)) {\n        return i\n      }\n    }\n    return -1\n  }\n\n  caretRect(index: number, offset: number): Rect {\n    const origin = this.rects[index].origin\n    const { origin: relative, size } = this.resolved.list[index].caretRect(offset, this.contentWidth)\n    return {\n      origin: {\n        x: origin.x + relative.x,\n        y: origin.y + relative.y\n      },\n      size\n    }\n  }\n}\n\ntype VisibleBlock = {\n  index: number\n  key: number\n  rect: Rect\n  block: Resolved.Block\n}\n\ntype SetVisibleBlocks = (blocks: VisibleBlock[]) => void\n\n// 将当前可见的段落/区块呈现出来。\nexport class RenderTree implements LayoutTreeObserver {\n  public layout: LayoutTree\n  public containerHeight: number\n  public offset: number\n\n  private allocator: KeyAllocator\n\n  private get visibleBlockIndices(): number[] {\n    const rects = this.layout.rects\n\n    const firstVisible: number = (() => {\n      for (let i = 0; i < rects.length; i += 1) {\n        const rect = rects[i]\n        if (rect.origin.y + rect.size.height >= this.offset) {\n          return i\n        }\n      }\n      return rects.length\n    })()\n\n    const lastVisible: number = (() => {\n      for (let i = rects.length - 1; i >= 0; i -= 1) {\n        const rect = rects[i]\n        if (rect.origin.y <= this.offset + this.containerHeight) {\n          return i\n        }\n      }\n      return -1\n    })()\n\n    let indices: number[] = []\n    for (let i = firstVisible; i <= lastVisible; i += 1) {\n      indices.push(i)\n    }\n    return indices\n  }\n\n  public visibleBlocks: VisibleBlock[]\n  public setVisibleBlocks?: SetVisibleBlocks = undefined\n\n  constructor(layout: LayoutTree, containerHeight: number, offset: number = 0) {\n    this.layout = layout\n    this.layout.observe(this)\n    this.containerHeight = containerHeight\n    this.offset = 0\n    this.allocator = new KeyAllocator()\n\n    this.visibleBlocks = this.visibleBlockIndices.map(index => {\n      const key = this.allocator.requestKey()\n      const rect = this.layout.rects[index]\n      const block = this.layout.resolved.list[index]\n      return { key, index, rect, block }\n    })\n  }\n\n  private fixVisibleBlocks() {\n    const indicies = this.visibleBlockIndices\n\n    for (const { index, key } of this.visibleBlocks) {\n      if (indicies.indexOf(index) === -1) {\n        this.allocator.recycleKey(key)\n      }\n    }\n\n    this.visibleBlocks = indicies.map(index => {\n      const visible = this.visibleBlocks.find(x => x.index === index)\n      const key = visible ? visible.key : this.allocator.requestKey()\n      const rect = this.layout.rects[index]\n      const block = this.layout.resolved.list[index]\n      return { key, index, rect, block }\n    })\n\n    this.setVisibleBlocks && this.setVisibleBlocks(this.visibleBlocks)\n  }\n\n  scrollTo(offset: number) {\n    this.offset = offset\n    this.fixVisibleBlocks()\n  }\n\n  layoutUpdated() {\n    // 以防我们删除了最后一行\n    this.offset = Math.min(this.offset, this.layout.contentHeight - this.containerHeight)\n    this.fixVisibleBlocks()\n  }\n}\n\nexport function useDocument(list: Source.Block[], containerSize: Size) {\n  const [source, resolved, layout, render] = React.useMemo(() => {\n    const coordinator = new Coordinator.FakeCoordinator()\n    const source = new SourceTree(list)\n    const resolved = new ResolvedTree(source, coordinator)\n    const layout = new LayoutTree(resolved, containerSize.width)\n    const render = new RenderTree(layout, containerSize.height)\n    return [source, resolved, layout, render]\n  }, [list, containerSize])\n\n  const [visibleBlocks, setVisibleBlocks] = React.useState(render.visibleBlocks)\n  if (!render.setVisibleBlocks) {\n    render.setVisibleBlocks = setVisibleBlocks\n  }\n\n  const setOffset = React.useCallback(\n    offset => {\n      render.scrollTo(offset)\n    },\n    [render]\n  )\n\n  const commit = React.useCallback(\n    (mutation: SourceMutation) => {\n      source.apply(mutation)\n    },\n    // eslint-disable-next-line\n    [source, render]\n  )\n\n  return {\n    source,\n    resolved,\n    layout,\n    render,\n    visibleBlocks,\n    setOffset,\n    commit\n  }\n}\n\nclass KeyAllocator {\n  used: number[] = []\n  total: number = 0\n\n  requestKey(): number {\n    const { used, total } = this\n    if (used.length === total) {\n      const key = total\n      this.used.push(key)\n      this.total += 1\n      return key\n    }\n\n    let key = 0\n    for (let i = 0; i < used.length; i += 1) {\n      if (used[i] !== key) {\n        this.used = [...used.slice(0, i), key, ...used.slice(i)]\n        return key\n      }\n      key += 1\n    }\n    if (key < total) {\n      this.used.push(key)\n      return key\n    }\n\n    throw new Error('Logic error. Should have found a key by now.')\n  }\n\n  recycleKey(key: number) {\n    const { used } = this\n    const i = used.indexOf(key)\n    if (i === -1) {\n      return\n    }\n\n    this.used = [...used.slice(0, i), ...used.slice(i + 1)]\n  }\n}\n\nfunction seqN(n: number): number[] {\n  let array: number[] = []\n  for (let i = 1; i <= n; i += 1) {\n    array.push(i)\n  }\n  return array\n}\n\nconst quoteList: string[] = [\n  'Hello there!',\n  'Sith Lords are our specialty!',\n  'It’s over Anakin! I have the high ground!',\n  'That’s why I’m here.',\n  'In my experience, there’s no such thing as luck.',\n  'Why do I feel you’re going to be the death of me?',\n  'Wait a minute. How did this happen? we’re smarter than this.',\n  'I hate it when he does that.',\n  'Only a Sith deals in absolutes. I will do what I must.',\n  'Who’s more foolish: the fool or the fool who follows him?',\n  'If you strike me down I will become more powerful than you could possibly imagine.',\n  'So what I told you was true, from a certain point of view.',\n  'Oh I have a bad feeling about this.',\n  'My allegiance is to the republic, to democracy!',\n  'I am the SENATE. Not yet. It’s treason then.',\n  'A surprise, to be sure, but a welcome one.',\n  'I’ve been waiting a long time for this moment. Wipe them out, All of them.',\n  'Did you ever hear the tragedy of Darth Plagueis the Wise? I thought not, it is not a story the Jedi would tell you. It is a Sith Legend.',\n  'If one is to understand the great mystery, one must study all its aspects, not just the narrow dogmatic narrow view of the Jedi.'\n]\n\nconst kindList: Source.ParagraphKind[] = ['heading1', 'heading2', 'heading3', 'singleQuote', 'paragraph']\n\nexport const sample_ = seqN(100).map(_ => {\n  const kind = kindList[Math.floor(Math.random() * kindList.length)]\n  const text = quoteList[Math.floor(Math.random() * quoteList.length)]\n  return new Source.Paragraph({ kind, text })\n})\n\nexport const sample = [\n  new Source.ExternalText('everyOne'),\n  new Source.ExternalText('everyTwo'),\n  new Source.ExternalText('everyFour'),\n  ...sample_\n]\n","import React from 'react'\n\nimport { Rect } from './Geometry'\n\nexport function cssAbsolutePositioned(rect: Rect): React.CSSProperties {\n  const { x: left, y: top } = rect.origin\n  const { width, height } = rect.size\n\n  return { position: 'absolute', top, left, height, width }\n}\n","import React from 'react'\nimport './Caret.css'\n\nimport { cssAbsolutePositioned } from '../CSS'\nimport { Rect } from '../Geometry'\n\ntype Props = { rect: Rect | null }\n\nconst Caret: React.FC<Props> = ({ rect }) => {\n  if (!rect) {\n    return <div style={{ display: 'none' }}></div>\n  }\n\n  const style = cssAbsolutePositioned(rect)\n  return <div className={'caret-blink'} style={style}></div>\n}\n\nexport default Caret\n","import React from 'react'\n\nimport { cssAbsolutePositioned } from '../CSS'\nimport { Rect } from '../Geometry'\n\ntype Props = {\n  rect: Rect\n  id: string\n}\n\nconst Positioned: React.FC<Props> = props => {\n  const { rect, id, children } = props\n  const style = cssAbsolutePositioned(rect)\n  return (\n    <div style={style} data-id={id}>\n      {children}\n    </div>\n  )\n}\n\nexport default Positioned\n","import React from 'react'\n\nimport { Point, Size, Rect } from '../Geometry'\n\nimport Positioned from './Positioned'\n\ntype ScrollableProps = {\n  containerSize: Size\n  contentHeight: number\n\n  outerClass?: string\n  innerClass?: string\n\n  onScroll?: (offset: number) => void\n  onClick?: (client: Point, offset: Point) => boolean\n}\n\nconst Scrollable: React.FC<ScrollableProps> = props => {\n  const { containerSize, contentHeight, children } = props\n  const outerEl = React.useRef<HTMLDivElement>(null)\n\n  const { onScroll, onClick } = props\n\n  const handleScroll = React.useCallback(\n    e => {\n      if (!outerEl.current || !onScroll) {\n        return\n      }\n      const offset = outerEl.current.scrollTop\n      onScroll(offset)\n    },\n    [onScroll]\n  )\n\n  const handleClick = React.useCallback(\n    (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n      if (!outerEl.current || !onClick) {\n        return\n      }\n\n      const client = { x: e.clientX, y: e.clientY }\n      const offset = {\n        x: e.pageX - outerEl.current.offsetLeft + outerEl.current.scrollLeft,\n        y: e.pageY - outerEl.current.offsetTop + outerEl.current.scrollTop\n      }\n      const prevent = onClick(client, offset)\n      if (prevent) {\n        e.preventDefault()\n      }\n    },\n    [onClick]\n  )\n\n  const outerCSS: React.CSSProperties = {\n    height: containerSize.height,\n    width: containerSize.width,\n    overflowY: 'scroll',\n    backgroundColor: 'white'\n  }\n\n  const innerCSS: React.CSSProperties = {\n    position: 'relative',\n    width: '100%',\n    height: contentHeight\n  }\n\n  const { outerClass, innerClass } = props\n\n  return (\n    <div style={outerCSS} className={outerClass} ref={outerEl} onScroll={handleScroll}>\n      <div style={innerCSS} className={innerClass} onClick={handleClick}>\n        {children}\n      </div>\n    </div>\n  )\n}\n\nexport default Scrollable\n","import React from 'react'\n\nimport ContentEditable, { InlineRange, SelectionHost } from './ContentEditable'\n\nimport { Point } from './Geometry'\nimport * as Source from './Source'\nimport { Block, TextBlock } from './Resolved'\nimport * as Agents from './Agents'\n\nimport Caret from './Components/Caret'\nimport Positioned from './Components/Positioned'\nimport Scrollable from './Components/Scrollable'\n\ntype CharIndex = {\n  index: number\n  offset: number\n}\n\nconst containerSize = { height: 600, width: 600 }\n\nconst App: React.FC = () => {\n  const { resolved, layout, visibleBlocks, setOffset, commit } = Agents.useDocument(Agents.sample, containerSize)\n  const [caret, setCaret] = React.useState<CharIndex | null>(null)\n  const elRef = React.useRef<ContentEditable>(null)\n\n  const handleScroll = React.useCallback(\n    offset => {\n      setOffset(offset)\n    },\n    [setOffset]\n  )\n\n  const handleClick = React.useCallback(\n    (client: Point, offset: Point) => {\n      const blockIndex = layout.blockIndexForPoint(offset)\n      if (blockIndex === -1) {\n        setCaret(null)\n      } else {\n        const index = getCaretPosition(client)\n        if (!index) {\n          setCaret(null)\n        } else {\n          setCaret({ index: blockIndex, offset: index.offset })\n        }\n      }\n\n      return true\n    },\n    [layout]\n  )\n\n  const rangeThunk = React.useCallback(() => {\n    return inlineRangeFrom(elRef, resolved, caret)\n  }, [resolved, caret])\n\n  const handleSelectionChange = React.useCallback(\n    (sel: Selection | null) => {\n      if (!sel) {\n        setCaret(null)\n        return\n      }\n      if (!caret) {\n        return\n      }\n\n      const offset = sel.anchorOffset\n      setCaret({ index: caret.index, offset })\n    },\n    [caret]\n  )\n\n  const handleInsertText = React.useCallback(\n    (_: InlineRange, input: string) => {\n      if (!caret) {\n        return\n      }\n\n      const block = resolved.source.list[caret.index] as Source.Paragraph\n      const text = block.text.slice(0, caret.offset) + input + block.text.slice(caret.offset)\n      const block_ = block.merge({ text })\n      setCaret({ index: caret.index, offset: caret.offset + input.length })\n      commit({\n        kind: 'update',\n        index: caret.index,\n        value: block_\n      })\n    },\n    [caret, commit, resolved.source.list]\n  )\n\n  const handleDeleteContent = React.useCallback(\n    (range: InlineRange) => {\n      if (!caret) {\n        return\n      }\n\n      const block = resolved.source.list[caret.index] as Source.Paragraph\n      const text = block.text.slice(0, range.start.offset) + block.text.slice(range.end.offset)\n      const block_ = block.merge({ text })\n      setCaret({ index: caret.index, offset: range.start.offset })\n      commit({\n        kind: 'update',\n        index: caret.index,\n        value: block_\n      })\n    },\n    [caret, commit, resolved.source.list]\n  )\n\n  const noOp = React.useCallback(() => {}, [])\n\n  const caretRect = caret && layout.caretRect(caret.index, caret.offset)\n  return (\n    <div>\n      {<h1>{caret ? `当前的光标位置，第 ${caret.index + 1} 个段落，偏移量 ${caret.offset}。` : '未选中'}</h1>}\n      <Scrollable\n        containerSize={containerSize}\n        contentHeight={layout.contentHeight}\n        onScroll={handleScroll}\n        onClick={handleClick}\n      >\n        {}\n        {visibleBlocks.map(block => (\n          <Positioned key={block.key} rect={block.rect} id={JSON.stringify(block.index)}>\n            <Block block={block.block} />\n          </Positioned>\n        ))}\n        <Caret rect={caretRect} />\n      </Scrollable>{' '}\n      <SelectionHost range={rangeThunk} onSelectionChange={handleSelectionChange}>\n        <ContentEditable\n          tag={'div'}\n          props={{}}\n          ref={elRef}\n          onInsertText={handleInsertText}\n          onDeleteContent={handleDeleteContent}\n          onInsertParagraph={noOp}\n        >\n          {caret && <Block block={resolved.list[caret.index]} />}\n        </ContentEditable>\n      </SelectionHost>\n    </div>\n  )\n}\n\nexport default App\n\nfunction inlineRangeFrom(\n  ref: React.RefObject<ContentEditable>,\n  resolved: Agents.ResolvedTree,\n  caret: CharIndex | null\n) {\n  if (!caret) {\n    return null\n  }\n  const { index, offset } = caret\n\n  if (!ref.current) {\n    return null\n  }\n  const {\n    current: { host }\n  } = ref\n  const { text } = resolved.list[index] as TextBlock\n\n  if (text.length > 0) {\n    return InlineRange.fromPaths(host, [0, 0], offset, [0, 0], offset)\n  } else {\n    return InlineRange.fromPaths(host, [0], 0, [0], 0)\n  }\n}\n\ntype DOMCharIndex = { node: Node; offset: number }\n\nfunction getCaretPosition({ x, y }: Point): DOMCharIndex | null {\n  if (document.caretPositionFromPoint) {\n    const range = document.caretPositionFromPoint(x, y)\n    if (!range) {\n      return null\n    }\n    return { node: range.offsetNode, offset: range.offset }\n  } else if (document.caretRangeFromPoint) {\n    const range = document.caretRangeFromPoint(x, y)\n    return { node: range.startContainer, offset: range.startOffset }\n  }\n  throw new Error('Your browser is not supported.')\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n)\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void\n  onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL((process as { env: { [key: string]: string } }).env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.')\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}